[2019-07-11 17:20:21] - INFO: --------测试开始---------
[2019-07-11 17:20:21] - INFO: --------测试结束---------
[2019-07-11 17:20:21] - INFO: --------测试开始---------
[2019-07-11 17:20:21] - INFO: --------测试结束---------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：post
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 17:20:21] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:21] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODM2ODE2fQ.XHf7z91qUPSlR3WyGpH0QxBeO_rfWELJOIUVNzJwF80"
}
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODM2ODE2fQ.XHf7z91qUPSlR3WyGpH0QxBeO_rfWELJOIUVNzJwF80
[2019-07-11 17:20:21] - INFO: 第三步：断言
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：post
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 17:20:21] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:21] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 17:20:21] - INFO: 第三步：断言
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：post
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 17:20:21] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:21] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 17:20:21] - INFO: 第三步：断言
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：post
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 17:20:21] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 17:20:21] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:21] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 17:20:21] - INFO: 第三步：断言
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：post
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 17:20:21] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:21] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 17:20:21] - INFO: 第三步：断言
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：put
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：put
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：put
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：put
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 17:20:21] - INFO: ----------测试结束----------
[2019-07-11 17:20:21] - INFO: ----------测试开始----------
[2019-07-11 17:20:21] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 17:20:21] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:21] - INFO: 请求方法：put
[2019-07-11 17:20:21] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 17:20:21] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 17:20:22] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 17:20:22] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 17:20:22] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：get
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "No records found"
  }
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": true,
  "tenant_db_id": "5d26ff51418acd14e21f282f"
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": true,
  "tenant_db_id": "5d26ff51418acd14e21f2830"
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：post
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - INFO: ----------测试开始----------
[2019-07-11 17:20:22] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 17:20:22] - INFO: 第一步: 获取请求数据
[2019-07-11 17:20:22] - INFO: 请求方法：get
[2019-07-11 17:20:22] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 17:20:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 17:20:22] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 17:20:22] - INFO: ----------测试结束----------
[2019-07-11 17:20:22] - WARNING: ---------------All Test End---------------
[2019-07-11 17:20:22] - INFO: 不发送电子邮件！
[2019-07-11 18:05:30] - INFO: --------测试开始---------
[2019-07-11 18:05:30] - INFO: --------测试结束---------
[2019-07-11 18:05:30] - INFO: --------测试开始---------
[2019-07-11 18:05:30] - INFO: --------测试结束---------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：post
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:05:30] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:30] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODM5NTI1fQ.6HNesEyuHPq1Vy6edErHOvxGFsg9Uk6xiBRcmp-6pvQ"
}
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODM5NTI1fQ.6HNesEyuHPq1Vy6edErHOvxGFsg9Uk6xiBRcmp-6pvQ
[2019-07-11 18:05:30] - INFO: 第三步：断言
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：post
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:05:30] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:30] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:05:30] - INFO: 第三步：断言
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：post
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:05:30] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:30] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:05:30] - INFO: 第三步：断言
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：post
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:05:30] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:05:30] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:30] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:05:30] - INFO: 第三步：断言
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：post
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:05:30] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:30] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:05:30] - INFO: 第三步：断言
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：put
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:30] - INFO: ----------测试开始----------
[2019-07-11 18:05:30] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:05:30] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:30] - INFO: 请求方法：put
[2019-07-11 18:05:30] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:05:30] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:05:30] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：put
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:05:31] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：put
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:05:31] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：put
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:05:31] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:05:31] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:05:31] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:05:31] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：get
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：post
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - INFO: ----------测试开始----------
[2019-07-11 18:05:31] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:05:31] - INFO: 第一步: 获取请求数据
[2019-07-11 18:05:31] - INFO: 请求方法：get
[2019-07-11 18:05:31] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:05:31] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:05:31] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:05:31] - INFO: ----------测试结束----------
[2019-07-11 18:05:31] - WARNING: ---------------All Test End---------------
[2019-07-11 18:05:31] - INFO: 不发送电子邮件！
[2019-07-11 18:15:36] - INFO: --------测试开始---------
[2019-07-11 18:15:36] - INFO: --------测试结束---------
[2019-07-11 18:15:36] - INFO: --------测试开始---------
[2019-07-11 18:15:36] - INFO: --------测试结束---------
[2019-07-11 18:15:36] - INFO: ----------测试开始----------
[2019-07-11 18:15:36] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:15:36] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:36] - INFO: 请求方法：post
[2019-07-11 18:15:36] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:15:36] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:15:36] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:36] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMTMxfQ.6QCw8oNumjL0LcVXdwf2h9g4vB4SBvg_zY6_lbAN9Ug"
}
[2019-07-11 18:15:36] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:15:36] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMTMxfQ.6QCw8oNumjL0LcVXdwf2h9g4vB4SBvg_zY6_lbAN9Ug
[2019-07-11 18:15:36] - INFO: 第三步：断言
[2019-07-11 18:15:36] - INFO: ----------测试结束----------
[2019-07-11 18:15:36] - INFO: ----------测试开始----------
[2019-07-11 18:15:36] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:15:36] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:36] - INFO: 请求方法：post
[2019-07-11 18:15:36] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:15:36] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:15:37] - INFO: 第三步：断言
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:15:37] - INFO: 第三步：断言
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:15:37] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:15:37] - INFO: 第三步：断言
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:15:37] - INFO: 第三步：断言
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：put
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：put
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：put
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：put
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：put
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:15:37] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:15:37] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:15:37] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:15:37] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：get
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:37] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:37] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:37] - INFO: ----------测试开始----------
[2019-07-11 18:15:37] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:15:37] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:37] - INFO: 请求方法：post
[2019-07-11 18:15:37] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:37] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:15:37] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:37] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:15:37] - INFO: ----------测试结束----------
[2019-07-11 18:15:38] - INFO: ----------测试开始----------
[2019-07-11 18:15:38] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:15:38] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:38] - INFO: 请求方法：post
[2019-07-11 18:15:38] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:38] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:15:38] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:38] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:15:38] - INFO: ----------测试结束----------
[2019-07-11 18:15:38] - INFO: ----------测试开始----------
[2019-07-11 18:15:38] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:15:38] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:38] - INFO: 请求方法：post
[2019-07-11 18:15:38] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:38] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:15:38] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:38] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:15:38] - INFO: ----------测试结束----------
[2019-07-11 18:15:38] - INFO: ----------测试开始----------
[2019-07-11 18:15:38] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:15:38] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:38] - INFO: 请求方法：post
[2019-07-11 18:15:38] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:38] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:15:38] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:38] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:15:38] - INFO: ----------测试结束----------
[2019-07-11 18:15:38] - INFO: ----------测试开始----------
[2019-07-11 18:15:38] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:15:38] - INFO: 第一步: 获取请求数据
[2019-07-11 18:15:38] - INFO: 请求方法：get
[2019-07-11 18:15:38] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:15:38] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:15:38] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:15:38] - INFO: ----------测试结束----------
[2019-07-11 18:15:38] - WARNING: ---------------All Test End---------------
[2019-07-11 18:15:38] - INFO: 不发送电子邮件！
[2019-07-11 18:16:45] - INFO: --------测试开始---------
[2019-07-11 18:16:45] - INFO: --------测试结束---------
[2019-07-11 18:16:45] - INFO: --------测试开始---------
[2019-07-11 18:16:45] - INFO: --------测试结束---------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：post
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:16:46] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:46] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMjAwfQ.5E7e2O6GpSex7xq7m3_ruqhEMFgRHpHg-seOEjkCpm0"
}
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMjAwfQ.5E7e2O6GpSex7xq7m3_ruqhEMFgRHpHg-seOEjkCpm0
[2019-07-11 18:16:46] - INFO: 第三步：断言
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：post
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:16:46] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:46] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:16:46] - INFO: 第三步：断言
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：post
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:16:46] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:46] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:16:46] - INFO: 第三步：断言
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：post
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:16:46] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:16:46] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:46] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:16:46] - INFO: 第三步：断言
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：post
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:16:46] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:46] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:16:46] - INFO: 第三步：断言
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：put
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：put
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：put
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：put
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:16:46] - INFO: ----------测试结束----------
[2019-07-11 18:16:46] - INFO: ----------测试开始----------
[2019-07-11 18:16:46] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:16:46] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:46] - INFO: 请求方法：put
[2019-07-11 18:16:46] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:16:46] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:16:46] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:16:46] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:16:47] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：get
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：post
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - INFO: ----------测试开始----------
[2019-07-11 18:16:47] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:16:47] - INFO: 第一步: 获取请求数据
[2019-07-11 18:16:47] - INFO: 请求方法：get
[2019-07-11 18:16:47] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:16:47] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:16:47] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:16:47] - INFO: ----------测试结束----------
[2019-07-11 18:16:47] - WARNING: ---------------All Test End---------------
[2019-07-11 18:16:47] - INFO: 不发送电子邮件！
[2019-07-11 18:19:49] - INFO: --------测试开始---------
[2019-07-11 18:19:49] - INFO: --------测试结束---------
[2019-07-11 18:19:49] - INFO: --------测试开始---------
[2019-07-11 18:19:49] - INFO: --------测试结束---------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：post
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:19:49] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:49] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMzgzfQ.wZBgDm5FQq_yPoAJvAY64g2ZEXBPk3m1jSUduzzensU"
}
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwMzgzfQ.wZBgDm5FQq_yPoAJvAY64g2ZEXBPk3m1jSUduzzensU
[2019-07-11 18:19:49] - INFO: 第三步：断言
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：post
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:19:49] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:49] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:19:49] - INFO: 第三步：断言
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：post
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:19:49] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:49] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:19:49] - INFO: 第三步：断言
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：post
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:19:49] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:19:49] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:49] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:19:49] - INFO: 第三步：断言
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：post
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:19:49] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:49] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:19:49] - INFO: 第三步：断言
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：put
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：put
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：put
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：put
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:19:49] - INFO: ----------测试结束----------
[2019-07-11 18:19:49] - INFO: ----------测试开始----------
[2019-07-11 18:19:49] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:19:49] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:49] - INFO: 请求方法：put
[2019-07-11 18:19:49] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:19:49] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:19:49] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:19:50] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:19:50] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：get
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：post
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - INFO: ----------测试开始----------
[2019-07-11 18:19:50] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:19:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:19:50] - INFO: 请求方法：get
[2019-07-11 18:19:50] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:19:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:19:50] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:19:50] - INFO: ----------测试结束----------
[2019-07-11 18:19:50] - WARNING: ---------------All Test End---------------
[2019-07-11 18:19:50] - INFO: 不发送电子邮件！
[2019-07-11 18:20:11] - INFO: --------测试开始---------
[2019-07-11 18:20:11] - INFO: --------测试结束---------
[2019-07-11 18:20:11] - INFO: --------测试开始---------
[2019-07-11 18:20:11] - INFO: --------测试结束---------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：post
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:20:11] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:11] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwNDA2fQ.prmfCwXbgpsP7fLiugCV2HXFER0ZetdiOkWTJWYiRzE"
}
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwNDA2fQ.prmfCwXbgpsP7fLiugCV2HXFER0ZetdiOkWTJWYiRzE
[2019-07-11 18:20:11] - INFO: 第三步：断言
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：post
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:20:11] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:11] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:20:11] - INFO: 第三步：断言
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：post
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:20:11] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:11] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:20:11] - INFO: 第三步：断言
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：post
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:11] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:20:11] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:11] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:20:11] - INFO: 第三步：断言
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：post
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:20:11] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:11] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:20:11] - INFO: 第三步：断言
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：put
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：put
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:11] - INFO: ----------测试开始----------
[2019-07-11 18:20:11] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:20:11] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:11] - INFO: 请求方法：put
[2019-07-11 18:20:11] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:11] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:11] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：put
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:12] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：put
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:12] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:20:12] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:20:12] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:20:12] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：get
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：post
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - INFO: ----------测试开始----------
[2019-07-11 18:20:12] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:20:12] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:12] - INFO: 请求方法：get
[2019-07-11 18:20:12] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:12] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:12] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:20:12] - INFO: ----------测试结束----------
[2019-07-11 18:20:12] - WARNING: ---------------All Test End---------------
[2019-07-11 18:20:12] - INFO: 不发送电子邮件！
[2019-07-11 18:20:50] - INFO: --------测试开始---------
[2019-07-11 18:20:50] - INFO: --------测试结束---------
[2019-07-11 18:20:50] - INFO: --------测试开始---------
[2019-07-11 18:20:50] - INFO: --------测试结束---------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：post
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 18:20:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:50] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwNDQ1fQ.WgUdMVwem2gvhGAE4C5EjzRQ_O5XGA3WxcqgDC9VZ5o"
}
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODQwNDQ1fQ.WgUdMVwem2gvhGAE4C5EjzRQ_O5XGA3WxcqgDC9VZ5o
[2019-07-11 18:20:50] - INFO: 第三步：断言
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：post
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 18:20:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 18:20:50] - INFO: 第三步：断言
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：post
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 18:20:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:50] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 18:20:50] - INFO: 第三步：断言
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：post
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:50] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 18:20:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 18:20:50] - INFO: 第三步：断言
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：post
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 18:20:50] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:50] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 18:20:50] - INFO: 第三步：断言
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：put
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：put
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:50] - INFO: ----------测试结束----------
[2019-07-11 18:20:50] - INFO: ----------测试开始----------
[2019-07-11 18:20:50] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 18:20:50] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:50] - INFO: 请求方法：put
[2019-07-11 18:20:50] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:50] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：put
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:51] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：put
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/changepassword
[2019-07-11 18:20:51] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 18:20:51] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 18:20:51] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 18:20:51] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：get
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：post
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - INFO: ----------测试开始----------
[2019-07-11 18:20:51] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 18:20:51] - INFO: 第一步: 获取请求数据
[2019-07-11 18:20:51] - INFO: 请求方法：get
[2019-07-11 18:20:51] - INFO: url：http://172.16.1.201:3002/tenant
[2019-07-11 18:20:51] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 18:20:51] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d26ff51418acd14e21f282f",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d26ff51418acd14e21f2830",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 18:20:51] - INFO: ----------测试结束----------
[2019-07-11 18:20:51] - WARNING: ---------------All Test End---------------
[2019-07-11 18:20:51] - INFO: 不发送电子邮件！
[2019-07-11 23:01:51] - INFO: --------测试开始---------
[2019-07-11 23:01:51] - INFO: --------测试结束---------
[2019-07-11 23:01:51] - INFO: --------测试开始---------
[2019-07-11 23:01:51] - INFO: --------测试结束---------
[2019-07-11 23:01:51] - INFO: ----------测试开始----------
[2019-07-11 23:01:51] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:01:51] - INFO: 第一步: 获取请求数据
[2019-07-11 23:01:51] - INFO: 请求方法：post
[2019-07-11 23:01:51] - INFO: url：http://172.16.1.201:3002/orchestrator_admin/login
[2019-07-11 23:01:51] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:02:15] - INFO: --------测试开始---------
[2019-07-11 23:02:15] - INFO: --------测试结束---------
[2019-07-11 23:02:15] - INFO: --------测试开始---------
[2019-07-11 23:02:15] - INFO: --------测试结束---------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：post
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:02:15] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:15] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3MjgzfQ.0eYoea94EugjsQbUpsMfXCGi0EHpe3riWoAH_XWscHM"
}
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3MjgzfQ.0eYoea94EugjsQbUpsMfXCGi0EHpe3riWoAH_XWscHM
[2019-07-11 23:02:15] - INFO: 第三步：断言
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：post
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 23:02:15] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:15] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 23:02:15] - INFO: 第三步：断言
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：post
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 23:02:15] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:15] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 23:02:15] - INFO: 第三步：断言
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：post
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:15] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 23:02:15] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:15] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 23:02:15] - INFO: 第三步：断言
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：post
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 23:02:15] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:15] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 23:02:15] - INFO: 第三步：断言
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：put
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：put
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:15] - INFO: ----------测试开始----------
[2019-07-11 23:02:15] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 23:02:15] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:15] - INFO: 请求方法：put
[2019-07-11 23:02:15] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:15] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:15] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：put
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:16] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：put
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:16] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 23:02:16] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 23:02:16] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 23:02:16] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：get
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：post
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - INFO: ----------测试开始----------
[2019-07-11 23:02:16] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 23:02:16] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:16] - INFO: 请求方法：get
[2019-07-11 23:02:16] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:16] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:16] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:02:16] - INFO: ----------测试结束----------
[2019-07-11 23:02:16] - WARNING: ---------------All Test End---------------
[2019-07-11 23:02:16] - INFO: 不发送电子邮件！
[2019-07-11 23:02:25] - INFO: --------测试开始---------
[2019-07-11 23:02:25] - INFO: --------测试结束---------
[2019-07-11 23:02:26] - INFO: --------测试开始---------
[2019-07-11 23:02:26] - INFO: --------测试结束---------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：post
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:02:26] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:26] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3Mjk0fQ.GDIDqhvSUO0shRJT3V3kdnNv8PaEKQpS34EbNRa_yAg"
}
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3Mjk0fQ.GDIDqhvSUO0shRJT3V3kdnNv8PaEKQpS34EbNRa_yAg
[2019-07-11 23:02:26] - INFO: 第三步：断言
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：post
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 23:02:26] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:26] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 23:02:26] - INFO: 第三步：断言
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：post
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 23:02:26] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:26] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 23:02:26] - INFO: 第三步：断言
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：post
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:26] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 23:02:26] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:26] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 23:02:26] - INFO: 第三步：断言
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：post
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 23:02:26] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:26] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 23:02:26] - INFO: 第三步：断言
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：put
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：put
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：put
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：put
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 23:02:26] - INFO: ----------测试结束----------
[2019-07-11 23:02:26] - INFO: ----------测试开始----------
[2019-07-11 23:02:26] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 23:02:26] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:26] - INFO: 请求方法：put
[2019-07-11 23:02:26] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:02:26] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 23:02:26] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 23:02:27] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 23:02:27] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：get
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：post
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - INFO: ----------测试开始----------
[2019-07-11 23:02:27] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 23:02:27] - INFO: 第一步: 获取请求数据
[2019-07-11 23:02:27] - INFO: 请求方法：get
[2019-07-11 23:02:27] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:02:27] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:02:27] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:02:27] - INFO: ----------测试结束----------
[2019-07-11 23:02:27] - WARNING: ---------------All Test End---------------
[2019-07-11 23:02:27] - INFO: 不发送电子邮件！
[2019-07-11 23:03:22] - INFO: --------测试开始---------
[2019-07-11 23:03:22] - INFO: --------测试结束---------
[2019-07-11 23:03:22] - INFO: --------测试开始---------
[2019-07-11 23:03:22] - INFO: --------测试结束---------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：post
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:03:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:22] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3MzUwfQ.73zpyoMdVUfzNqvucva6-VzqNuakNgdVAnOwLODCz1U"
}
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3MzUwfQ.73zpyoMdVUfzNqvucva6-VzqNuakNgdVAnOwLODCz1U
[2019-07-11 23:03:22] - INFO: 第三步：断言
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：post
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 23:03:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 23:03:22] - INFO: 第三步：断言
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：post
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 23:03:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:22] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 23:03:22] - INFO: 第三步：断言
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：post
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:03:22] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 23:03:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 23:03:22] - INFO: 第三步：断言
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：post
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 23:03:22] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:22] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 23:03:22] - INFO: 第三步：断言
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：put
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：put
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：put
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：put
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 23:03:22] - INFO: ----------测试结束----------
[2019-07-11 23:03:22] - INFO: ----------测试开始----------
[2019-07-11 23:03:22] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 23:03:22] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:22] - INFO: 请求方法：put
[2019-07-11 23:03:22] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:03:22] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 23:03:22] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 23:03:23] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 23:03:23] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：get
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：post
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - INFO: ----------测试开始----------
[2019-07-11 23:03:23] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 23:03:23] - INFO: 第一步: 获取请求数据
[2019-07-11 23:03:23] - INFO: 请求方法：get
[2019-07-11 23:03:23] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:03:23] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:03:23] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:03:23] - INFO: ----------测试结束----------
[2019-07-11 23:03:23] - WARNING: ---------------All Test End---------------
[2019-07-11 23:03:23] - INFO: 不发送电子邮件！
[2019-07-11 23:04:34] - INFO: --------测试开始---------
[2019-07-11 23:04:34] - INFO: --------测试结束---------
[2019-07-11 23:04:34] - INFO: --------测试开始---------
[2019-07-11 23:04:34] - INFO: --------测试结束---------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：post
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:04:34] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:34] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3NDIyfQ.1O-ab0paEceq64MurhNF6PjZ6yEJ1qVy35T1GBEfPJs"
}
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3NDIyfQ.1O-ab0paEceq64MurhNF6PjZ6yEJ1qVy35T1GBEfPJs
[2019-07-11 23:04:34] - INFO: 第三步：断言
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：post
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 23:04:34] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:34] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 23:04:34] - INFO: 第三步：断言
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：post
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 23:04:34] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:34] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 23:04:34] - INFO: 第三步：断言
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：post
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:04:34] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 23:04:34] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:34] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 23:04:34] - INFO: 第三步：断言
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：post
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 23:04:34] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:34] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 23:04:34] - INFO: 第三步：断言
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：put
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：put
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：put
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:34] - INFO: ----------测试开始----------
[2019-07-11 23:04:34] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 23:04:34] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:34] - INFO: 请求方法：put
[2019-07-11 23:04:34] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:04:34] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 23:04:34] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：put
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:04:35] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 23:04:35] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 23:04:35] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 23:04:35] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：get
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：post
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - INFO: ----------测试开始----------
[2019-07-11 23:04:35] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 23:04:35] - INFO: 第一步: 获取请求数据
[2019-07-11 23:04:35] - INFO: 请求方法：get
[2019-07-11 23:04:35] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:04:35] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:04:35] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:04:35] - INFO: ----------测试结束----------
[2019-07-11 23:04:35] - WARNING: ---------------All Test End---------------
[2019-07-11 23:04:35] - INFO: 不发送电子邮件！
[2019-07-11 23:08:39] - INFO: --------测试开始---------
[2019-07-11 23:08:39] - INFO: --------测试结束---------
[2019-07-11 23:08:39] - INFO: --------测试开始---------
[2019-07-11 23:08:39] - INFO: --------测试结束---------
[2019-07-11 23:08:39] - INFO: ----------测试开始----------
[2019-07-11 23:08:39] - test01_OrcLogin.py, Line 30]  - INFO: test_login01
[2019-07-11 23:08:39] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:39] - INFO: 请求方法：post
[2019-07-11 23:08:39] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:08:39] - INFO: 请求数据：{'username': 'orc_admin', 'password': 'orc_admin'}
[2019-07-11 23:08:39] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:39] - INFO: {
  "_id": "5be12191a30debdbb49f3508",
  "username": "orc_admin",
  "status": true,
  "orchestrator_admin_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3NjY3fQ.dzMc-ZSC3HiK9g6XLXV7tMZmQtwKgjWq8ddtocB-Yhc"
}
[2019-07-11 23:08:39] - test01_OrcLogin.py, Line 42]  - INFO: 提取orc_token
[2019-07-11 23:08:39] - test01_OrcLogin.py, Line 42]  - INFO: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcmNfYWRtaW4iLCJhdWQiOiJQYW5lbCIsImlzcyI6IlBhbmVsIiwiaWF0IjoxNTYyODU3NjY3fQ.dzMc-ZSC3HiK9g6XLXV7tMZmQtwKgjWq8ddtocB-Yhc
[2019-07-11 23:08:39] - INFO: 第三步：断言
[2019-07-11 23:08:39] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test01_OrcLogin.py, Line 62]  - INFO: test_login02
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：post
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin', 'password': '654321'}
[2019-07-11 23:08:40] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:40] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username or password error"
  }
}
[2019-07-11 23:08:40] - INFO: 第三步：断言
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test01_OrcLogin.py, Line 83]  - INFO: test_login03
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：post
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin1', 'password': '123456'}
[2019-07-11 23:08:40] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:40] - INFO: {
  "status": false,
  "err": {
    "code": 404,
    "message": "Username does not exists"
  }
}
[2019-07-11 23:08:40] - INFO: 第三步：断言
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test01_OrcLogin.py, Line 105]  - INFO: test_login04
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：post
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:08:40] - INFO: 请求数据：{'password': '123456'}
[2019-07-11 23:08:40] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:40] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Username is needed"
  }
}
[2019-07-11 23:08:40] - INFO: 第三步：断言
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test01_OrcLogin.py, Line 126]  - INFO: test_login05
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：post
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/login
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin'}
[2019-07-11 23:08:40] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:40] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Password is needed"
  }
}
[2019-07-11 23:08:40] - INFO: 第三步：断言
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test02_UpdateOrcPw.py, Line 30]  - INFO: test_update01
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：put
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test02_UpdateOrcPw.py, Line 54]  - INFO: test_update02
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：put
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin_no', 'new_password': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test02_UpdateOrcPw.py, Line 78]  - INFO: test_update03
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：put
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin', 'current_password': '123456'}
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test02_UpdateOrcPw.py, Line 102]  - INFO: test_update04
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：put
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': 'orc_admin'}
[2019-07-11 23:08:40] - INFO: ----------测试结束----------
[2019-07-11 23:08:40] - INFO: ----------测试开始----------
[2019-07-11 23:08:40] - test02_UpdateOrcPw.py, Line 126]  - INFO: test_update05
[2019-07-11 23:08:40] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:40] - INFO: 请求方法：put
[2019-07-11 23:08:40] - INFO: url：http://192.168.0.103:3002/orchestrator_admin/changepassword
[2019-07-11 23:08:40] - INFO: 请求数据：{'username': 'orc_admin', 'new_password': '123456', 'current_password': 'orc_admin'}
[2019-07-11 23:08:40] - check_new_login, Line 166]  - INFO: check_new_login重新获取orc_admin_token成功
[2019-07-11 23:08:40] - restore_orc_pw, Line 183]  - INFO: restore_orc_pw orc admin密码还原成功
[2019-07-11 23:08:41] - INFO: 还原密码之后重新获取orc_token成功restore_get_pw
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 27]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：get
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 51]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'autotest', 'info': 'autotest', 'is_auto': False}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 72]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'tenant_name': 'test_autolive', 'db': 'test_autolive', 'info': 'test_autolive', 'is_auto': True}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 93]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'db': 'lack_teant_name', 'info': 'lack_teant_name', 'is_auto': False}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide tenant name"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 120]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'tenant_name': 'lack_db_name', 'info': 'lack_db_name', 'is_auto': False}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Provide db"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 146]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'tenant_name': 'autotest', 'db': 'test', 'info': 'test', 'is_auto': False}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 173]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：post
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 请求数据：{'tenant_name': 'test', 'db': 'autotest', 'info': 'test', 'is_auto': False}
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": false,
  "err": {
    "code": 400,
    "message": "Tenant name/DB already exists"
  }
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - INFO: ----------测试开始----------
[2019-07-11 23:08:41] - test03_CreateTenantDB.py, Line 200]  - INFO: test_login01
[2019-07-11 23:08:41] - INFO: 第一步: 获取请求数据
[2019-07-11 23:08:41] - INFO: 请求方法：get
[2019-07-11 23:08:41] - INFO: url：http://192.168.0.103:3002/tenant
[2019-07-11 23:08:41] - INFO: 第二步:发送请求，获取返回数据：
[2019-07-11 23:08:41] - INFO: {
  "status": true,
  "results": [
    {
      "_id": "5d272b280656dd0758a62a8c",
      "tenant_name": "haiyitenant",
      "db": "hydb",
      "info": "test",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda419",
      "tenant_name": "autotest",
      "db": "autotest",
      "info": "autotest",
      "active_status": true
    },
    {
      "_id": "5d2749df0152e20ff4dda41e",
      "tenant_name": "test_autolive",
      "db": "test_autolive",
      "info": "test_autolive",
      "active_status": true
    }
  ]
}
[2019-07-11 23:08:41] - INFO: ----------测试结束----------
[2019-07-11 23:08:41] - WARNING: ---------------All Test End---------------
[2019-07-11 23:08:41] - INFO: 不发送电子邮件！
